[
  ["name" [Ref String]]
  ["position" [Ref Vector]]
  ["in" [Ref Ref]]
  ["has_boss" [String String]]
] [i predicate] map pop

[
  [&1 "Alice" name] 
  [&1 [0 9] position] 
  [&1 &5 in]
  [&2 "Bob" name] 
  [&2 [1 9] position] 
  [&2 &5 in]
  [&3 "Eve" name] 
  [&3 [2 9] position] 
  # [&3 &5 in]
  ["Alice" "Adam" has_boss]
  ["Bob" "Alice" has_boss]
  ["Eve" "Alice" has_boss]
] [assert] map pop

clear

# [[?who [?x 9] position]
#  [?who &5 in]
#  [?who "Alice" name]
# ] and

# [
#   [? [0 ?] position]
#   [? [1 ?] position]
# ] or

# # [[[&1 [0 9] position] [&1 [1 9] position] or]]

# [
#   [?x "Adam" has_boss] # -> frames= Alice
#   [?x "Alice" has_boss] # -> frames=Bob Eve
# ] or

[ ?who "Alice" name ] not

# [
#   [ ?who [?x 9] position ]
#   [[ ?who "Alice" name ] not ]
# ] and


# [[ [?x &5 in] [?x [0 ?] position] and ]
#  [?x "Bob" name]] or


# [ 
#  [ [ "Alice" "Adam" has_boss ] [ "Alice" "Alice" has_boss ] or]
#  [ [ "Bob" "Adam" has_boss ] [ "Bob" "Alice" has_boss ] or]
#  [ [ "Eve" "Adam" has_boss ] [ "Eve" "Alice" has_boss ] or]
# ]




# &1 [? ?] position
# ? [? 9] position [first ?who name first second] each

# ?who ?n name
# &2 "Bob" name
# &3 "Eve" name

# &1 ? name

# ? ? name

# [
#   [&1 [0 0]]
#   [&2 [2 1]]
#   [&3 [4 1]]
# ] [i position] map pop

# [% % position] ? print

# [[%p [% 1] position]
# [%p %who name]] and


# [
# [%a [%x %ay] position] 
# [%b [%x %by] position] 
# [%a %b same] not?
# ] and? print


# ---

# "same_col" [Ref Ref] predicate

# [%x %x same] 
# []
# rule

# [%a %b same_col]
# [[
#   [%a [%ax %y] position] 
#   [%b [%bx %y] position]
#   [[%a %b same] not?] 
# ] and?]
# rule

# [&2 %who same_col] ? # [[&2 &3 same_col]]
