"cursors" == [
  ⬜ white   normal
  🟨 yellow  warning
  🟥 red     danger
]

"heroes" == [
  🤴 the prince
  👸 the princess
  👼 cherubs
  🧝 elves         sp  [ [dash] [swap] ]     ( fast & tough. )
  🧚 fairies       hp  [ [heal] [cure] ]     ( emits light. care, influence. )
  🧙 wizards       mp  [ [fire] [thunder] ]  ( smart & dangerous. )
]

"colors" == [
  🟦 blue   ( 🟦🧚 🟦🧝 🟦🧙 )
  🟩 green  ( 🟩🧚 🟩🧝 🟩🧙 )
  🟧 orange ( 🟧🧚 🟧🧝 🟧🧙 )
  🟪 purple ( 🟪🧚 🟪🧝 🟪🧙 )
]

"places" == [
  ⛲ the fountain  ( home. the lobby? )
  🏘 the village   ( sell loot, buy stuff, get quests. )
  🌲 forests       ( 4x4 dungeon. )
  🏕 campsites     ( rest areas, mini-games. )
  ⛰ mountains     ( 4x4 dungeon. )
  🏰 castles       ( 7x4x4 dungeon. )
  🏔 peaks         ( empty spaces. )
  🏛 the temple    ( level up! )
] ( teleports you to a zone. )

( you "gain xp" by getting closer to the temple level.
  you "lose xp" by dying and having to backtrack or reset.
  you "gain levels" by reaching the end without dying. )

( maybe leveling up means your agent gets to integrate newly created structures in the lower layers... )

"critters" == [
  🐑 sheeps     ( eats off excess data. )
  🐈 cats       ( purrs. )
  🐕 dogs       ( fetches. )
  🐝 bees       ( polinates flowers. )
  🦌 the deer   ( leads you to secrets. )
  🐌 the snail  ( spreads data. )
  🦉 the owl    ( gives you tips. )
] ( automatons. they help you in some way. )

( these games we make, they're caricatures, illustrations. we can decide
what we amplify and what we diminish. )

"items" == [
  (  name, durability, function signature. )
  🕯 candle     1  :      -> light;               ( emit light for a moment. )
  💎 gem        1  :      -> 0xFF 0xFF 0xFF 0xFF;
  📜 scroll     1  :      -> [P] i
  📕 book       1  :      -> "text" puts;         ( source code for the level? )
  🦴 bone       1  :      -> [ ..ref? ];
  🔒 lock       1  :      ->
  🗝 key        1  :   🔒 -> [ 🔒 nothing ] maybe;
  🍄 mushroom   1  :    n -> n hp incr;
  🌿 herb       1  :    n -> n mp incr;
  💰 gold       1  :    n -> n gp incr;
] ( expandable resources. )

"equipment" == [
  ⛏ pick      ( mine data blocks. )
  🥾 boots     ( walk faster. )
  🎒 backpack  ( bag of registers. )
  🧳 luggage   ( bigger bag of registers. )
  🪓 axe       ( wide attack. )
  🗡 dagger    ( short range attack. )
  🏹 bow       ( shoot arrows. )
  🧮 abacus    ( get numbers from numbers. )
  🔮 orb       ( invoke spirits. )
  🎲 dice      ( generate random numbers. )
  💍 ring      ( + luck. )
  🛡 shield    ( + protection. )
  👑 crown     ( + smarts. )
] ( assets. should break easily. )

"monsters" == [
  🐛 bugs        "eats crops."
  🐀 rats        "hides, steals and stashes items"
  🦇 bats        "fly towards shadows, hurting you if in the way"
  🐺 wolves      "hunt in packs"
  👺 goblins     "creates malware"
]

"bosses" == [
  🐍 the snake   "bites, maybe poison"
  🕷️ the spider  "creates webs 🕸️, which drain stamina" 
  👹 the ogre    "destroys data"
  🐲 the dragon  "sleeps, eats sheep, burns down villages, accumulates riches"
] ( threats. )

"people" == [
  👶 baby
  👦 boy
  👧 girl
  👨 man
  👩 woman
  👴 old man
  👵 old woman
  ( 🐎 horse? )
] ( you can have conversations with them. )

"signals" == [
  🙆 ok
  🙅 no
  🙇 bow
  🙋 raise hand
  💁 tip hand
  🙍 frown
  🙎 pout
]

"particles" == [
  ✨ magic effect  ( appears when effects are invoked. )
  🌈 light    ( shines in a radial gradient. )
  🌊 water    ( flows downstreams, accumulates in pools. )
  🌪 wind     ( moves in circles, moves light things. )
  🔥 fire     ( spreads, self-replicating. )
  ⚡⚡ thunder  ( sparks in right angles, discharges and disappears. )
] ( cellular automata? )

"tiles" == [
  ~~  water
  /\  mountain
  φφ  forest
  ``  grass  
  --  soil
  ##  wall
]

( action language? )
"operators" == [
  ( atoms: )
  ..  noop
  @.  self
  ,.   wait
  xF  1-16
  'A  char
  []  empty list

  ( compounds: )
  (.  .) comments
  [.  .] lists
  {.  .} sets

  ( flow control: )
  ^.  go north
  >.  go east 
  v.  go south
  <.  go west
  X.  end

  ( stack: )
  c.  cons
  d.  dup
  f.  infra
  i.  i
  s.  swap
  p.  pop

  ( arithmetics: )
  +.  add
  -.  sub
  *.  mul
  /.  div
  %.  mod

  ( logic: )
  ||  or
  &&  and
  !.  not
  ^.  xor

  ( conditionals: )
  if  ifte
]
